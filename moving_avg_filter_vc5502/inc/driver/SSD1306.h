#ifndef _SSD1306_H_
#define _SSD1306_H_

#include <csl_i2c.h>
#include <stdio.h>
#include "csl_types.h"



static Uint8 font[][6]={
{0x00, 0x00, 0x00, 0x00, 0x00, 0x00},// (space)
{0x00, 0x00, 0x5F, 0x00, 0x00, 0x00},// !
{0x00, 0x07, 0x00, 0x07, 0x00, 0x00},// "
{0x14, 0x7F, 0x14, 0x7F, 0x14, 0x00},// #
{0x24, 0x2A, 0x7F, 0x2A, 0x12, 0x00},// $
{0x23, 0x13, 0x08, 0x64, 0x62, 0x00},// %
{0x36, 0x49, 0x55, 0x22, 0x50, 0x00},// &
{0x00, 0x05, 0x03, 0x00, 0x00, 0x00},// '
{0x00, 0x1C, 0x22, 0x41, 0x00, 0x00},// (
{0x00, 0x41, 0x22, 0x1C, 0x00, 0x00},// )
{0x08, 0x2A, 0x1C, 0x2A, 0x08, 0x00},// *
{0x08, 0x08, 0x3E, 0x08, 0x08, 0x00},// +
{0x00, 0x50, 0x30, 0x00, 0x00, 0x00},// ,
{0x08, 0x08, 0x08, 0x08, 0x08, 0x00},// -
{0x00, 0x30, 0x30, 0x00, 0x00, 0x00},// .
{0x20, 0x10, 0x08, 0x04, 0x02, 0x00},// /
{0x3E, 0x51, 0x49, 0x45, 0x3E, 0x00},// 0
{0x00, 0x42, 0x7F, 0x40, 0x00, 0x00},// 1
{0x42, 0x61, 0x51, 0x49, 0x46, 0x00},// 2
{0x21, 0x41, 0x45, 0x4B, 0x31, 0x00},// 3
{0x18, 0x14, 0x12, 0x7F, 0x10, 0x00},// 4
{0x27, 0x45, 0x45, 0x45, 0x39, 0x00},// 5
{0x3C, 0x4A, 0x49, 0x49, 0x30, 0x00},// 6
{0x01, 0x71, 0x09, 0x05, 0x03, 0x00},// 7
{0x36, 0x49, 0x49, 0x49, 0x36, 0x00},// 8
{0x06, 0x49, 0x49, 0x29, 0x1E, 0x00},// 9
{0x00, 0x36, 0x36, 0x00, 0x00, 0x00},// :
{0x00, 0x56, 0x36, 0x00, 0x00, 0x00},// ;
{0x00, 0x08, 0x14, 0x22, 0x41, 0x00},// <
{0x14, 0x14, 0x14, 0x14, 0x14, 0x00},// =
{0x41, 0x22, 0x14, 0x08, 0x00, 0x00},// >
{0x02, 0x01, 0x51, 0x09, 0x06, 0x00},// ?
{0x32, 0x49, 0x79, 0x41, 0x3E, 0x00},// @
{0x7E, 0x11, 0x11, 0x11, 0x7E, 0x00},// A
{0x7F, 0x49, 0x49, 0x49, 0x36, 0x00},// B
{0x3E, 0x41, 0x41, 0x41, 0x22, 0x00},// C
{0x7F, 0x41, 0x41, 0x22, 0x1C, 0x00},// D
{0x7F, 0x49, 0x49, 0x49, 0x41, 0x00},// E
{0x7F, 0x09, 0x09, 0x01, 0x01, 0x00},// F
{0x3E, 0x41, 0x41, 0x51, 0x32, 0x00},// G
{0x7F, 0x08, 0x08, 0x08, 0x7F, 0x00},// H
{0x00, 0x41, 0x7F, 0x41, 0x00, 0x00},// I
{0x20, 0x40, 0x41, 0x3F, 0x01, 0x00},// J
{0x7F, 0x08, 0x14, 0x22, 0x41, 0x00},// K
{0x7F, 0x40, 0x40, 0x40, 0x40, 0x00},// L
{0x7F, 0x02, 0x04, 0x02, 0x7F, 0x00},// M
{0x7F, 0x04, 0x08, 0x10, 0x7F, 0x00},// N
{0x3E, 0x41, 0x41, 0x41, 0x3E, 0x00},// O
{0x7F, 0x09, 0x09, 0x09, 0x06, 0x00},// P
{0x3E, 0x41, 0x51, 0x21, 0x5E, 0x00},// Q
{0x7F, 0x09, 0x19, 0x29, 0x46, 0x00},// R
{0x46, 0x49, 0x49, 0x49, 0x31, 0x00},// S
{0x01, 0x01, 0x7F, 0x01, 0x01, 0x00},// T
{0x3F, 0x40, 0x40, 0x40, 0x3F, 0x00},// U
{0x1F, 0x20, 0x40, 0x20, 0x1F, 0x00},// V
{0x7F, 0x20, 0x18, 0x20, 0x7F, 0x00},// W
{0x63, 0x14, 0x08, 0x14, 0x63, 0x00},// X
{0x03, 0x04, 0x78, 0x04, 0x03, 0x00},// Y
{0x61, 0x51, 0x49, 0x45, 0x43, 0x00},// Z
{0x00, 0x00, 0x7F, 0x41, 0x41, 0x00},// [
{0x02, 0x04, 0x08, 0x10, 0x20, 0x00},// "\"
{0x41, 0x41, 0x7F, 0x00, 0x00, 0x00},// ]
{0x04, 0x02, 0x01, 0x02, 0x04, 0x00},// ^
{0x40, 0x40, 0x40, 0x40, 0x40, 0x00},// _
{0x00, 0x01, 0x02, 0x04, 0x00, 0x00},// `
{0x20, 0x54, 0x54, 0x54, 0x78, 0x00},// a
{0x7F, 0x48, 0x44, 0x44, 0x38, 0x00},// b
{0x38, 0x44, 0x44, 0x44, 0x20, 0x00},// c
{0x38, 0x44, 0x44, 0x48, 0x7F, 0x00},// d
{0x38, 0x54, 0x54, 0x54, 0x18, 0x00},// e
{0x08, 0x7E, 0x09, 0x01, 0x02, 0x00},// f
{0x08, 0x14, 0x54, 0x54, 0x3C, 0x00},// g
{0x7F, 0x08, 0x04, 0x04, 0x78, 0x00},// h
{0x00, 0x44, 0x7D, 0x40, 0x00, 0x00},// i
{0x20, 0x40, 0x44, 0x3D, 0x00, 0x00},// j
{0x00, 0x7F, 0x10, 0x28, 0x44, 0x00},// k
{0x00, 0x41, 0x7F, 0x40, 0x00, 0x00},// l
{0x7C, 0x04, 0x18, 0x04, 0x78, 0x00},// m
{0x7C, 0x08, 0x04, 0x04, 0x78, 0x00},// n
{0x38, 0x44, 0x44, 0x44, 0x38, 0x00},// o
{0x7C, 0x14, 0x14, 0x14, 0x08, 0x00},// p
{0x08, 0x14, 0x14, 0x18, 0x7C, 0x00},// q
{0x7C, 0x08, 0x04, 0x04, 0x08, 0x00},// r
{0x48, 0x54, 0x54, 0x54, 0x20, 0x00},// s
{0x04, 0x3F, 0x44, 0x40, 0x20, 0x00},// t
{0x3C, 0x40, 0x40, 0x20, 0x7C, 0x00},// u
{0x1C, 0x20, 0x40, 0x20, 0x1C, 0x00},// v
{0x3C, 0x40, 0x30, 0x40, 0x3C, 0x00},// w
{0x44, 0x28, 0x10, 0x28, 0x44, 0x00},// x
{0x0C, 0x50, 0x50, 0x50, 0x3C, 0x00},// y
{0x44, 0x64, 0x54, 0x4C, 0x44, 0x00},// z
{0x00, 0x08, 0x36, 0x41, 0x00, 0x00},// {
{0x00, 0x00, 0x7F, 0x00, 0x00, 0x00},// |
{0x00, 0x41, 0x36, 0x08, 0x00, 0x00},// }
{0x08, 0x08, 0x2A, 0x1C, 0x08, 0x00},// ->
{0x08, 0x1C, 0x2A, 0x08, 0x08, 0x00} // <-
};

#define OSD9616_I2C_ADDR 	0x3C    // OSD9616 I2C address

#define CSL_I2C_TEST_PASSED      (0)
#define CSL_I2C_TEST_FAILED      (1)

#define CSL_I2C_DATA_SIZE        (64)
#define CSL_EEPROM_ADDR_SIZE     (2)
#define CSL_I2C_OWN_ADDR         (0x2F)


#define CSL_I2C_TEST_PASSED      (0)
#define CSL_I2C_TEST_FAILED      (1)

#define CSL_I2C_DATA_SIZE        (64)
#define CSL_EEPROM_ADDR_SIZE     (2)
#define OSD9616_ADDR_SIZE		(1)
#define CSL_I2C_OWN_ADDR         (0x2F)

#define CSL_I2C_SYS_CLK          (100)
#define CSL_I2C_BUS_FREQ         (200)


#define BLACK 0
#define WHITE 1
#define INVERSE 2

#define SSD1306_FONT_WIDTH 6
#define SSD1306_DATA		0x40
#define SSD1306_CMD			0x00

#define SSD1306_LCDWIDTH                  96
#define SSD1306_LCDHEIGHT                 16

#define SSD1306_SETCONTRAST 0x81
#define SSD1306_DISPLAYALLON_RESUME 0xA4
#define SSD1306_DISPLAYALLON 0xA5
#define SSD1306_NORMALDISPLAY 0xA6
#define SSD1306_INVERTDISPLAY 0xA7
#define SSD1306_DISPLAYOFF 0xAE
#define SSD1306_DISPLAYON 0xAF

#define SSD1306_SETDISPLAYOFFSET 0xD3
#define SSD1306_SETCOMPINS 0xDA

#define SSD1306_SETVCOMDETECT 0xDB

#define SSD1306_SETDISPLAYCLOCKDIV 0xD5
#define SSD1306_SETPRECHARGE 0xD9

#define SSD1306_SETMULTIPLEX 0xA8

#define SSD1306_SETLOWCOLUMN 0x00
#define SSD1306_SETHIGHCOLUMN 0x10

#define SSD1306_SETSTARTLINE 0x40

#define SSD1306_MEMORYMODE 0x20
#define SSD1306_COLUMNADDR 0x21
#define SSD1306_PAGEADDR   0x22

#define SSD1306_COMSCANINC 0xC0
#define SSD1306_COMSCANDEC 0xC8

#define SSD1306_SEGREMAP 0xA0

#define SSD1306_CHARGEPUMP 0x8D

#define SSD1306_EXTERNALVCC 0x1
#define SSD1306_SWITCHCAPVCC 0x2

// Scrolling #defines
#define SSD1306_ACTIVATE_SCROLL 0x2F
#define SSD1306_DEACTIVATE_SCROLL 0x2E
#define SSD1306_SET_VERTICAL_SCROLL_AREA 0xA3
#define SSD1306_RIGHT_HORIZONTAL_SCROLL 0x26
#define SSD1306_LEFT_HORIZONTAL_SCROLL 0x27
#define SSD1306_VERTICAL_AND_RIGHT_HORIZONTAL_SCROLL 0x29
#define SSD1306_VERTICAL_AND_LEFT_HORIZONTAL_SCROLL 0x2A

void prints( char *str);
Int16 oled_init();
interrupt void i2c_isr(void);
void CSL_i2cAlCallback(void);
void CSL_i2cNackCallback(void);
void CSL_i2cArdyCallback(void);
void CSL_i2cRxCallback(void);
void CSL_i2cTxCallback(void);
void CSL_i2cScdCallback(void);
void CSL_i2cAasCallback(void);
void printsamples(Uint16 *samples,Uint16 count);
void gotoXy(Uint8 x, Uint8 y);//col , row
#endif
